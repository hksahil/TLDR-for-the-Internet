{"version":3,"sources":["components/Card.js","components/Drawer/TextCarousal.js","components/Drawer/index.js","components/Header.js","components/Footer.js","components/ScrollTop.js","App.js","index.js"],"names":["Card","props","songs","songsIndian","events","twitterTrends","games","famousperson","repos","language","gainers","loosers","type","category","utilwrapper","useState","stocksview","changestocksview","songsview","changesongsview","languageHandler","value","className","onClick","articles","map","item","class","color","title","style","verticalAlign","href","inshorts_url","window","open","text","description","length","gainer","gainername","gainerchange","looser","loosername","looserchange","song","textTransform","songName","songArtist","songLink","songIndianName","songIndianArtist","songIndianLink","game","gameName","currentGamePlayers","twitterTrend","trendName","trendNumbers","person","personName","personProfession","event","eventName","slice","repo","reponame","repodescription","repolink","TextCarousal","dots","swipe","Info","setdrawer","position","right","top","fontSize","margin","display","marginLeft","marginTop","useStyles","makeStyles","paper","background","Header","styles","drawer","fulldate","Date","date","getDate","month","getMonth","year","getDay","getFullYear","onInit","typewriter","typeString","pauseFor","deleteAll","start","padding","Drawer","anchor","onClose","zIndex","classes","Footer","textDecoration","fontFamily","Scroll","showBelow","theme","toTop","bottom","backgroundColor","transition","breakpoints","up","show","setShow","handleScroll","pageYOffset","useEffect","addEventListener","removeEventListener","IconButton","behavior","aria-label","component","App","setSongs","setSongsIndian","setEvents","settwitterTrends","setgames","setfamousperson","setrepos","setgainers","setloosers","setcategory","setlanguage","setType","fetch","then","res","json","data","urls","checkStatus","response","ok","Promise","resolve","reject","Error","statusText","parseJSON","all","url","catch","error","console","log","flag","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e11d4a0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { FaArrowAltCircleRight } from \"react-icons/fa\";\nimport { FiExternalLink } from \"react-icons/fi\";\nimport { RiSpotifyLine } from \"react-icons/ri\";\nimport EllipsisText from \"react-ellipsis-text\";\n\nexport default function Card(props) {\n  const {\n    songs,\n    songsIndian,\n    events,\n    twitterTrends,\n    games,\n    famousperson,\n    repos,\n    language,\n    gainers,\n    loosers,\n    type,\n    category,\n    utilwrapper,\n  } = props;\n\n  //tabs to change views\n  const [stocksview, changestocksview] = useState(\"gainers\");\n  const [songsview, changesongsview] = useState(\"worldwide\");\n\n  //changing state on click of languages\n  const languageHandler = (value) => {\n    utilwrapper(value, \"language\");\n  };\n\n  const typeHandler = (value) => {\n    utilwrapper(value, \"type\");\n  };\n\n  return (\n    <>\n      <div className=\"card-wrapper\">\n        <div className=\"news-card\">\n          <p className=\"card-header-text\">News of the day :</p>\n          <div className=\"pill-container\">\n            <button\n              className={`pill ${type === \"all_news\" ? \"highlighted\" : \"\"}`}\n              onClick={() => {\n                utilwrapper(\"all_news\", \"type\");\n              }}\n            >\n              All\n            </button>\n\n            <button\n              className={`pill ${type === \"travel\" ? \"highlighted\" : \"\"}`}\n              onClick={() => {\n                utilwrapper(\"travel\", \"type\");\n              }}\n            >\n              Travel\n            </button>\n            <button\n              className={`pill ${type === \"sports\" ? \"highlighted\" : \"\"}`}\n              onClick={() => {\n                utilwrapper(\"sports\", \"type\");\n              }}\n            >\n              Sports\n            </button>\n            <button\n              className={`pill ${type === \"technology\" ? \"highlighted\" : \"\"}`}\n              onClick={() => {\n                utilwrapper(\"technology\", \"type\");\n              }}\n            >\n              Tech\n            </button>\n\n            <button\n              className={`pill ${type === \"startups\" ? \"highlighted\" : \"\"}`}\n              onClick={() => {\n                utilwrapper(\"startups\", \"type\");\n              }}\n            >\n              Startups\n            </button>\n          </div>\n          {category &&\n            category.articles.map((item) => {\n              return (\n                <div className=\"repo-parent\">\n                  <span class=\"left\">\n                    <FaArrowAltCircleRight\n                      color=\"lightskyblue\"\n                      className=\"arrows\"\n                    />\n                  </span>\n\n                  <div className=\"news-parent-left\">\n                    <p className=\"card-list-news\">\n                      {item.title}{\" \"}\n                      <span\n                        style={{ verticalAlign: \"middle\" }}\n                        href={item.inshorts_url}\n                      >\n                        <FiExternalLink\n                          style={{ color: \"#ffffff99\" }}\n                          onClick={() => {\n                            window.open(item.inshorts_url);\n                          }}\n                        />\n                      </span>\n                    </p>\n                    <p className=\"news-desc\">\n                      <EllipsisText text={item.description} length={\"90\"} />\n                    </p>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n\n        <div className=\"stocks-card\">\n          <p className=\"card-header-text\">Stocks of the day :</p>\n          <div className=\"pill-container\">\n            <button\n              className={`pill ${\n                stocksview === \"gainers\" ? \"highlighted\" : \"\"\n              }`}\n              onClick={() => {\n                changestocksview(\"gainers\");\n              }}\n            >\n              Top Gainers\n            </button>\n            <button\n              className={`pill ${\n                stocksview === \"loosers\" ? \"highlighted\" : \"\"\n              }`}\n              onClick={() => {\n                changestocksview(\"loosers\");\n              }}\n            >\n              Top Loosers\n            </button>\n          </div>\n\n          {stocksview === \"gainers\"\n            ? gainers.map((gainer) => {\n                return (\n                  <div className=\"list-container\">\n                    <span class=\"left\">\n                      <FaArrowAltCircleRight\n                        color=\"#ffffb7\"\n                        className=\"arrows\"\n                      />\n                    </span>\n                    <p className=\"card-list\">\n                      {gainer.gainername} with{\" \"}\n                      <span className=\"gainer-change\">\n                        +{gainer.gainerchange}%\n                      </span>{\" \"}\n                      change\n                    </p>\n                  </div>\n                );\n              })\n            : loosers.map((looser) => {\n                return (\n                  <div className=\"list-container\">\n                    <span class=\"left\">\n                      <FaArrowAltCircleRight\n                        color=\"#ffffb7\"\n                        className=\"arrows\"\n                      />\n                    </span>\n                    <p className=\"card-list\">\n                      {looser.loosername} with{\" \"}\n                      <span className=\"looser-change\">\n                        {looser.looserchange}%\n                      </span>{\" \"}\n                      change\n                    </p>\n                  </div>\n                );\n              })}\n        </div>\n\n        <div className=\"songs-card\">\n          <p className=\"card-header-text\">Songs of the day : </p>\n          <div className=\"pill-container\">\n            <button\n              className={`pill ${\n                songsview === \"worldwide\" ? \"highlighted\" : \"\"\n              }`}\n              onClick={() => {\n                changesongsview(\"worldwide\");\n              }}\n            >\n              Worldwide\n            </button>\n            <button\n              className={`pill ${songsview === \"indian\" ? \"highlighted\" : \"\"}`}\n              onClick={() => {\n                changesongsview(\"indian\");\n              }}\n            >\n              Indian\n            </button>\n          </div>\n          {songsview === \"worldwide\"\n            ? songs.map((song) => {\n                return (\n                  <div className=\"list-container\">\n                    <span class=\"left\">\n                      <FaArrowAltCircleRight\n                        color=\"#d291bc\"\n                        className=\"arrows\"\n                      />\n                    </span>\n\n                    <p className=\"card-list-song\">\n                      <span style={{ textTransform: \"capitalize\" }}>\n                        {song.songName}{\" \"}\n                      </span>\n                      {song.songArtist}\n                    </p>\n\n                    <div className=\"repo-parent-right \">\n                      <a className=\"pill-static\" href={song.songLink}>\n                        Play\n                      </a>\n                    </div>\n                  </div>\n                );\n              })\n            : songsIndian.map((song) => {\n                return (\n                  <div className=\"list-container\">\n                    <span class=\"left\">\n                      <FaArrowAltCircleRight\n                        color=\"#d291bc\"\n                        className=\"arrows\"\n                      />\n                    </span>\n                    <p className=\"card-list-song\">\n                      <span style={{ textTransform: \"capitalize\" }}>\n                        {song.songIndianName}{\" \"}\n                      </span>\n                      {song.songIndianArtist}\n                    </p>\n                    <div className=\"repo-parent-right \">\n                      <a className=\"pill-static\" href={song.songIndianLink}>\n                        Play\n                      </a>\n                    </div>\n                  </div>\n                );\n              })}\n        </div>\n\n        <div className=\"games-card\">\n          <p className=\"card-header-text\">Games of the day : </p>\n          <span class=\"pill-static\">Concurent Players</span>\n          {games.map((game) => {\n            return (\n              <div className=\"list-container\">\n                <span class=\"left\">\n                  <FaArrowAltCircleRight\n                    color=\"lightsalmon\"\n                    className=\"arrows\"\n                  />\n                </span>\n                <p className=\"card-list\">\n                  {game.gameName} with {game.currentGamePlayers} live players\n                </p>\n              </div>\n            );\n          })}\n        </div>\n\n        <div className=\"trends-card\">\n          <p className=\"card-header-text\">Trends of the day : </p>\n\n          {twitterTrends.map((twitterTrend) => {\n            return (\n              <div className=\"list-container\">\n                <span class=\"left\">\n                  <FaArrowAltCircleRight\n                    color=\"lightskyblue\"\n                    className=\"arrows\"\n                  />\n                </span>\n                <p className=\"card-list\">\n                  {twitterTrend.trendName} with {twitterTrend.trendNumbers}{\" \"}\n                  tweets\n                </p>\n              </div>\n            );\n          })}\n        </div>\n\n        <div className=\"birthday-card\">\n          <p className=\"card-header-text\">Birthdays of the day : </p>\n          {famousperson.map((person) => {\n            return (\n              <div className=\"list-container\">\n                <span class=\"left\">\n                  <FaArrowAltCircleRight\n                    color=\"lightgoldenrodyellow\"\n                    className=\"arrows\"\n                  />\n                </span>\n                <p className=\"card-list\">\n                  {person.personName} , {person.personProfession}\n                </p>\n              </div>\n            );\n          })}\n        </div>\n\n        <div className=\"history-card\">\n          <p className=\"card-header-text\">History of the day : </p>\n          {events.map((event) => {\n            return (\n              <div className=\"list-container\">\n                <span class=\"left\">\n                  <FaArrowAltCircleRight\n                    color=\"lightcoral\"\n                    className=\"arrows\"\n                  />\n                </span>\n                <p className=\"card-list\">{event.eventName}</p>\n              </div>\n            );\n          })}\n        </div>\n\n        <div className=\"repos-card\">\n          <p className=\"card-header-text\">Repos of the day :</p>\n          <div className=\"pill-container\">\n            <button\n              className={`pill ${language === \"all\" ? \"highlighted\" : \"\"}`}\n              onClick={() => {\n                languageHandler(\"all\");\n              }}\n            >\n              All\n            </button>\n\n            <button\n              className={`pill ${language === \"Python\" ? \"highlighted\" : \"\"}`}\n              onClick={() => {\n                languageHandler(\"Python\");\n              }}\n            >\n              Python\n            </button>\n            <button\n              className={`pill ${language === \"C\" ? \"highlighted\" : \"\"}`}\n              onClick={() => {\n                languageHandler(\"C\");\n              }}\n            >\n              C\n            </button>\n            <button\n              className={`pill ${language === \"Java\" ? \"highlighted\" : \"\"}`}\n              onClick={() => {\n                languageHandler(\"Java\");\n              }}\n            >\n              Java\n            </button>\n            <button\n              className={`pill ${language === \"Go\" ? \"highlighted\" : \"\"}`}\n              onClick={() => {\n                languageHandler(\"Go\");\n              }}\n            >\n              Go\n            </button>\n          </div>\n          {repos.slice(0,3).map((repo) => {\n            return (\n              <div className=\"repo-parent\">\n                <span class=\"left\">\n                  <FaArrowAltCircleRight\n                    color=\"lightgreen\"\n                    className=\"arrows\"\n                  />\n                </span>\n\n                <div className=\"repo-parent-left\">\n                  <p className=\"card-list-repo\">{repo.reponame}</p>\n                  <p className=\"repo-desc\">{repo.repodescription}</p>\n                </div>\n\n                <div className=\"repo-parent-right \">\n                  <a className=\"pill-static\" href={repo.repolink}>\n                    Link\n                  </a>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nfunction TextCarousal() {\n  var settings = {\n    dots: true,\n    swipe: true,\n  };\n  return (\n    <div>\n      <div className=\"carousal-container\">\n        <Slider {...settings}>\n          <div>\n            <p className=\"carousal-text\">\n              Give us your 5-10 minutes everyday and you will be updated about\n              what's happening on the internet.\n            </p>\n          </div>\n          <div>\n            <p className=\"carousal-text\">\n              A music lover will know which song to gossip about.\n            </p>\n          </div>\n          <div>\n            <p className=\"carousal-text\">\n              A motivated student can grab the essentials quickly.\n            </p>\n          </div>\n          <div>\n            <p className=\"carousal-text\">\n              In short , the TLDR summarizes the Internet for lazy bums\n            </p>\n          </div>\n        </Slider>\n      </div>\n    </div>\n  );\n}\n\nexport default TextCarousal;\n","import React from \"react\";\nimport { FcOk } from \"react-icons/fc\";\nimport { TiTimes } from \"react-icons/ti\";\nimport TextCarousal from \"./TextCarousal\";\n\nexport default function Info(props) {\n  const { setdrawer } = props;\n  return (\n    <div>\n      <TiTimes\n        style={{\n          color: \"white\",\n          position: \"absolute\",\n          right: \"20px\",\n          top: \"10px\",\n          fontSize: \"20px\",\n        }}\n        onClick={() => {\n          setdrawer(false);\n        }}\n      />\n      <div className=\"list\">\n        <p>What does this site do?</p>\n        <p>TLDR is designed to simplify your life.<br></br>It summarizes the Internet in shortest way possible.\n</p>\n        <TextCarousal></TextCarousal>\n      </div>\n\n      <div className=\"list\">\n        <p>Is the data reliable?</p>\n        <p>\n          We run a cron job every 8 hours which scraps the data from top websites like twitter, Inshorts, Spotify etc.\n          <br/><br/>\n          So yea , you can believe us !\n        </p>\n      </div>\n      <hr style={{ margin: \"0px 20px\" }}></hr>\n      <div className=\"list\">\n        <div style={{ display: \"flex\" }}>\n          <span>\n            <FcOk />\n          </span>\n          <span style={{ marginLeft: \"8px\" }}>\n            Need the data which updates every hour ?\n          </span>\n        </div>\n        <div style={{ display: \"flex\", marginTop: \"5px\" }}>\n          <span>\n            <FcOk />\n          </span>\n          <span style={{ marginLeft: \"8px\" }}>\n            Want your custom list to be shown ?\n          </span>\n        </div>\n\n        {/* CTA */}\n\n        <a href=\"mailto:officialhksahil@gmail.com\" class=\"btn success \">\n          Get premium ! Drop a message\n        </a>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { FaBars } from \"react-icons/fa\";\nimport { HiMenuAlt3 } from \"react-icons/hi\";\nimport Typewriter from \"typewriter-effect\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Info from \"./Drawer/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  paper: {\n    background: \"#121212\",\n  },\n});\nexport default function Header() {\n  const styles = useStyles();\n  const [drawer, setdrawer] = useState(false);\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var fulldate = new Date();\n  var date = fulldate.getDate();\n  var month = monthNames[fulldate.getMonth()];\n  var day = fulldate.getDay();\n  var year = fulldate.getFullYear();\n\n  return (\n    <div className=\"main-container\">\n      {drawer ? (\n        <HiMenuAlt3\n          className=\"navicon\"\n          onClick={() => {\n            setdrawer(true);\n          }}\n        />\n      ) : (\n        <FaBars\n          className=\"navicon\"\n          onClick={() => {\n            setdrawer(true);\n          }}\n        />\n      )}\n\n      <div className=\"header\">\n        <div className=\"elevated\">\n          <p>Trending</p>\n          <div className=\"moving-div\">\n            <Typewriter\n              onInit={(typewriter) => {\n                typewriter\n\n                  .typeString(\"Stocks\")\n                  .pauseFor(1000)\n                  .deleteAll()\n                  .typeString(\"News\")\n                  .pauseFor(1000)\n                  .deleteAll()\n\n                  .typeString(\"Songs\")\n                  .pauseFor(1000)\n                  .deleteAll()\n\n                  .typeString(\"Repos\")\n                  .pauseFor(1000)\n                  .deleteAll()\n\n                  .typeString(\"Games\")\n                  .pauseFor(1000)\n                  .deleteAll()\n\n                  .typeString(\"Events\")\n                  .pauseFor(1000)\n                  .deleteAll()\n\n                  .typeString(\"History\")\n                  .pauseFor(1000)\n                  .deleteAll()\n\n                  .typeString(\"Internet\")\n                  .pauseFor(1000)\n\n                  .start();\n              }}\n            />\n          </div>\n          <p>Tracker</p>\n\n          <div\n            className=\"pill highlighted-date\"\n            style={{ position: \"absolute\" }}\n          >\n            <p\n              style={{ padding: \"2px\", fontSize: \"13px\" }}\n            >{`Today is ${month} ${date}, ${year}`}</p>\n          </div>\n        </div>\n      </div>\n\n      <Drawer\n        anchor={'bottom'}\n        open={drawer}\n        onClose={() => setdrawer(false)}\n        zIndex=\"drawer\"\n        classes={{ paper: styles.paper }}\n      >\n        <Info setdrawer={setdrawer}></Info>\n      </Drawer>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <p style={{ padding: \"6px 0px 6px 0px\", color: \"#ffffffde\" }}>\n        Made with ❤️ by{\" \"}\n        <a\n          href=\"https://www.linkedin.com/in/offiicialhksahil/\"\n          style={{\n            textDecoration: \"none\",\n            fontFamily: \"Caveat\",\n            fontSize: \"20px\",\n            color: \"#ffffffde\",\n          }}\n        >\n          Sahil\n        </a>\n      </p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst Scroll = ({ showBelow }) => {\n\n\n  const useStyles = makeStyles((theme) => ({\n    toTop: {\n      zIndex: 2,\n      position: \"fixed\",\n      bottom: \"2vh\",\n      backgroundColor: \"#DCDCDC\",\n      color: \"black\",\n      \"&:hover, &.Mui-focusVisible\": {\n        transition: \"0.3s\",\n        color: \"#397BA6\",\n        backgroundColor: \"#DCDCDC\",\n      },\n      [theme.breakpoints.up(\"xs\")]: {\n        right: \"5%\",\n        backgroundColor: \"rgb(220,220,220,0.7)\",\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        right: \"6.5%\",\n      },\n    },\n  }));\n\n\n  const classes = useStyles();\n\n  const [show, setShow] = useState(showBelow ? false : true);\n\n  const handleScroll = () => {\n    if (window.pageYOffset > showBelow) {\n      if (!show) setShow(true);\n    } else {\n      if (show) setShow(false);\n    }\n  };\n\n  const handleClick = () => {\n    window[`scrollTo`]({ top: 0, behavior: `smooth` });\n  };\n\n  useEffect(() => {\n    if (showBelow) {\n      window.addEventListener(`scroll`, handleScroll);\n      return () => window.removeEventListener(`scroll`, handleScroll);\n    }\n  });\n\n  return (\n    <div>\n      {show && (\n        <IconButton\n          onClick={handleClick}\n          className={classes.toTop}\n          aria-label=\"to top\"\n          component=\"span\"\n        >\n          <ExpandLessIcon />\n        </IconButton>\n      )}\n    </div>\n  );\n};\nexport default Scroll;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"./components/Card\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport \"./components/styles.css\";\nimport axios from \"axios\";\n\nimport Scroll from \"./components/ScrollTop\";\nfunction App() {\n  const [songs, setSongs] = useState([]);\n  const [songsIndian, setSongsIndian] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [twitterTrends, settwitterTrends] = useState([]);\n  const [games, setgames] = useState([]);\n  const [famousperson, setfamousperson] = useState([]);\n  const [repos, setrepos] = useState([]);\n  const [gainers, setgainers] = useState([]);\n  const [loosers, setloosers] = useState([]);\n  const [category, setcategory] = useState();\n  const [language, setlanguage] = useState(\"all\");\n  const [type, setType] = useState(\"all_news\");\n\n  const utilwrapper = (value, flag) => {\n    if (flag === \"language\") {\n      setlanguage(value);\n    } else if (flag === \"type\") {\n      setType(value);\n    } else if (flag === \"gainers\") {\n      setgainers(value);\n    } else if (flag === \"loosers\") {\n      setloosers(value);\n    } else if (flag === \"category\") {\n      setcategory(value);\n    }\n  };\n\n  useEffect(() => {\n    language === \"all\"\n      ? fetch(\"/github\")\n          .then((res) => res.json())\n          .then((data) => {\n            setrepos(data);\n          })\n      : fetch(`/github/${language}`)\n          .then((res) => res.json())\n          .then((data) => {\n            setrepos(data);\n          });\n  }, [language]);\n\n  // combining use effects\n  const urls = [\n    \"/songs\",\n    \"/songsIndian\",\n    \"/events\",\n    \"/twitterTrends\",\n    \"/famousperson\",\n    \"/games\",\n    \"/topgainers\",\n    \"/toploosers\",\n  ];\n\n  useEffect(() => {\n    Promise.all(\n      urls.map((url) =>\n        fetch(url)\n          .then(checkStatus) // check the response of our APIs\n          .then(parseJSON) // parse it to Json\n          .catch((error) => console.log(\"There was a problem!\", error))\n      )\n    ).then((data) => {\n      // assign to requested URL as define in array with array index.\n      setSongs(data[0]);\n      setSongsIndian(data[1]);\n      setEvents(data[2]);\n      settwitterTrends(data[3]);\n      setfamousperson(data[4]);\n      setgames(data[5]);\n      setgainers(data[6]);\n      setloosers(data[7]);\n    });\n  }, []);\n\n  function checkStatus(response) {\n    if (response.ok) {\n      return Promise.resolve(response);\n    } else {\n      return Promise.reject(new Error(response.statusText));\n    }\n  }\n\n  function parseJSON(response) {\n    return response.json();\n  }\n\n  // actual news api start//\n  useEffect(() => {\n    if (type === \"all_news\") {\n      fetch(\"https://inshortsv2.vercel.app/news?type=all_news&limit=4\")\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data, \"data\");\n          setcategory(data);\n        });\n    } else {\n      fetch(`https://inshortsv2.vercel.app/news?type=${type}&limit=3`)\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data, \"data\");\n          setcategory(data);\n        });\n    }\n  }, [type]);\n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Card\n        songs={songs}\n        songsIndian={songsIndian}\n        events={events}\n        twitterTrends={twitterTrends}\n        games={games}\n        famousperson={famousperson}\n        repos={repos}\n        language={language}\n        // languagewrapper={languagewrapper}\n        gainers={gainers}\n        loosers={loosers}\n        type={type}\n        // typewrapper={typewrapper}\n        category={category}\n        // categorywrapper={categorywrapper}\n        utilwrapper={utilwrapper}\n      ></Card>\n      <Scroll showBelow={250} />\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}